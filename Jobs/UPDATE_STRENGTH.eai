#IFDEF GLOBAL
    integer area_uncertainty = 10
#ELSE
//==========================================================================
// Update Strength
//==========================================================================
function UpdateStrength takes nothing returns nothing
local player p = null
local integer i = 0
local integer enemy_num = 0
local integer ally_num = 0
local integer ai_num = 0
local real Handicap = 0
#INCLUDETABLE <$VER$\Strengths.txt>
local real %1 = 0
local real a%1 = 0
#ENDINCLUDE

loop
  exitwhen i >= PLAYERAGGRESSIVE
  set p = Player(i)
  if p != null and GetPlayerSlotState(p) == PLAYER_SLOT_STATE_PLAYING and not IsPlayerObserver(p) then
    if GetPlayerController(p) == MAP_CONTROL_COMPUTER then
      set ai_num = ai_num + 1
    endif
    set Handicap = GetPlayerStrengthHandicap(p)
    if IsPlayerEnemy(ai_player, p) then
      set enemy_num = enemy_num + 1
  #INCLUDETABLE <$VER$\Strengths.txt>
      set %1 = %1 + ((GetPlayer%1Strength(p)) * Handicap)
  #ENDINCLUDE
      if GetPlayerRace(p) == RACE_NIGHTELF then  // prevent player use tree attack
        set heavyarmor = heavyarmor + Max(0, GetPlayerStructureCount(p, true) - GetPlayerUnitTypeCount(p, oMOON_WELL) - Min(GetPlayerUnitTypeCount(p, oANCIENT_PROTECT), 5) - 16)  // 16 is correction factor: Exclude some trees and non tree buildings that do not participate in the attack
      endif
    elseif IsPlayerAlly(ai_player, p) then
      set ally_num = ally_num + 1
  #INCLUDETABLE <$VER$\Strengths.txt>
      set a%1 = a%1 + ((GetPlayer%1Strength(p)) * Handicap)
  #ENDINCLUDE
    endif
  endif
  set i = i + 1
endloop
set sleep_multiplier = GetSleepMultipler(ai_num)
#INCLUDETABLE <$VER$\Strengths.txt>
if %1 > 0 then
  set enemy_%1 = RMax(%1 + GetRandomDiff(area_uncertainty), 0 )
else
  set enemy_%1 = 0
endif
set ally_%1 = a%1
#ENDINCLUDE
// no include tower strength
set Handicap = enemy_air + enemy_casters + enemy_piercing + enemy_normal + enemy_unarmored + enemy_lightarmor + enemy_mediumarmor + enemy_heavyarmor + enemy_siege + enemy_magic
if Handicap > 0 then
  set enemy_air_proportion = enemy_air / Handicap
else
  set enemy_air_proportion = 0
endif
set Handicap = ally_air + ally_casters + ally_piercing + ally_normal + ally_unarmored + ally_lightarmor + ally_mediumarmor + ally_heavyarmor + ally_siege + ally_magic
if Handicap > 0 then
  set ally_air_proportion = ally_air / Handicap
else
  set ally_air_proportion = 0
endif
set p = null
endfunction

function UpdateStrengthJob takes nothing returns nothing
  call DisplayToAllJobDebug("UPDATE_STRENGTH Start")
  if player_defeated then
    return
  endif
  call UpdateStrength()
  if not pathing_done then
    call TQAddJob(15 * sleep_multiplier, UPDATE_STRENGTH, 0)
  endif
endfunction
#ENDIF